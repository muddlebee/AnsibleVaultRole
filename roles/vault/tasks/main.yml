# - name: Creating vault user group
#   group: 
#     name: "{{ vault_group }}"
#   become: true

# - name: Creating vault user
#   user:
#     name: "{{ vault_user }}"
#     group: "{{ vault_group }}"
#     system: yes
#     shell: "/sbin/nologin"
#     comment: "vault nologin User"
#     createhome: "no"
#     state: present

- name: Install prerequisites
  package:
    name: "{{ item }}"
    update_cache: yes
  with_items: "{{ vault_install_prerequisites }}"
  become: yes

- name: Copy binary
  copy:
    src: "{{ role_path }}/files/vault_{{vault_version}}_linux_amd64.zip"
    dest: /tmp/vault_{{vault_version}}_linux_amd64.zip
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755
  register: vault_download

- name: "Unzip vault archive"
  unarchive:
    src: "{{ vault_download.dest }}"
    dest: /usr/local/bin
    copy: no
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755

- name: "Set vault binary capabilities"
  capabilities:
    path: /usr/local/bin/vault
    capability: cap_ipc_lock+ep
    state: present

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
  notify: systemd_reload

- name: config file
  template:
    src: vault.hcl.j2
    dest: "{{ vault_config_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"

- name: Create Vault data directory
  file:
    path: "{{ vault_data_dir }}"
    state: directory
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0755

# - name: vault service
#   service:
#     name: vault
#     state: started
#     enabled: yes

- name: Start Vault
  shell: "/usr/local/bin/vault server -config=/etc/vault.hcl > /dev/null 2>&1 &"
  args:
    executable: /bin/bash
